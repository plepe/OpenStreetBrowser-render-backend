<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map>

<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
   <Stylesheet src="overlay_pt.mss" />

   <Layer class="routes" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type_merge(array_agg(route_type(osm_tags))) as "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'tram', 'trolley', 'trolleybus', 'bus', 'minibus', 'tram', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" asc ) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="routes_extract" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type_merge(array_agg(route_type(osm_tags))) as "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" asc ) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="routes_features" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type_merge(array_agg(route_type(osm_tags))) as "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'tram', 'trolley', 'trolleybus', 'bus', 'minibus', 'tram', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" asc ) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="routes_features_extract" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type_merge(array_agg(route_type(osm_tags))) as "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" asc ) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <Layer class="stations_bbox" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">bbox</Parameter>
      <Parameter name="table">
(select
  "name", "importance",
  GeometryFromText('POINT(' || x(centroid(poly)) || ' ' || ymax(poly) || ')', 900913) as top,
  geomfromtext('LINESTRING(' || XMIN(poly)||' '||YMIN(poly) ||', '|| XMIN(poly)||' '||YMAX(poly) ||', '|| XMAX(poly)||' '||YMAX(poly)||', '|| XMAX(poly)||' '||YMIN(poly)||', '|| XMIN(poly)||' '||YMIN(poly) ||', '|| XMIN(poly)||' '||YMAX(poly)|| ')', 900913) as bbox
from
 (select
   osm_tags->'name' as "name",
   importance_text(max(importance_order(stops_importance(osm_id, osm_tags, osm_way)))) as "importance",
   envelope(ST_Collect((CASE
     WHEN osm_type @> 'form=>point' THEN geo_relate_nearest_point(osm_id, osm_tags, osm_way, 15, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)')
     ELSE osm_way END))) as "poly"
  from osm_poipoly
  where
    osm_way &amp;&amp; !bbox! and
    (osm_tags @> 'highway=>bus_stop' or
     osm_tags @> 'railway=>tram_stop' or
     osm_tags @> 'railway=>station' or
     osm_tags @> 'railway=>halt' or
     osm_tags @> 'amenity=>bus_station' or
     osm_tags @> 'amenity=>ferry_terminal' or
     osm_tags @> 'aeroway=>aerodrome' or
     osm_tags @> 'aerialway=>station')
  group by
    osm_tags->'name',
    stop_merge(osm_id, osm_tags, osm_way, 'name')
) as stations) as s
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <!-- EXTRACT -->
   <Layer class="stops_p_extract" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geo</Parameter>
      <Parameter name="table">
(select
  cast(round((geo_relate_calc_angles(p.osm_id, p.osm_tags, p.osm_way, 50))[2]/(2*pi())*72)+54 as int)%72 as "angle", 
  stops_type(p.osm_id, p.osm_tags, p.osm_way) as "type",
  stops_importance(p.osm_id, p.osm_tags, p.osm_way) as "importance",
  p.osm_way as "geo",
  stops_dir(osm_id, osm_tags, osm_way) as "direction"
from
  osm_point p
where
  p.osm_way &amp;&amp; !bbox! and
  (p.osm_tags @> 'railway=>station' or
   p.osm_tags @> 'amenity=>bus_station' or
   p.osm_tags @> 'amenity=>ferry_terminal' or
   p.osm_tags @> 'aeroway=>aerodrome')
) as stops_p
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <Layer class="stops_n_extract" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geo</Parameter>
      <Parameter name="table">
(select
  cast(round((geo_relate_calc_angles(p.osm_id, p.osm_tags, p.osm_way, 50))[3]/(2*pi())*72)+54 as int)%72 as "angle", 
  stops_type(p.osm_id, p.osm_tags, p.osm_way) as "type",
  stops_importance(p.osm_id, p.osm_tags, p.osm_way) as "importance",
  p.osm_way as "geo",
  stops_dir(osm_id, osm_tags, osm_way) as "direction"
from
  osm_point p
where
  p.osm_way &amp;&amp; !bbox! and
  (p.osm_tags @> 'railway=>station' or
   p.osm_tags @> 'amenity=>bus_station' or
   p.osm_tags @> 'amenity=>ferry_terminal' or
   p.osm_tags @> 'aeroway=>aerodrome')
) as stops_n
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <Layer class="stops_p" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geo</Parameter>
      <Parameter name="table">
(select
  cast(round((geo_relate_calc_angles(p.osm_id, p.osm_tags, p.osm_way, 50, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)'))[2]/(2*pi())*72)+54 as int)%72 as "angle", 
  stops_type(p.osm_id, p.osm_tags, p.osm_way) as "type",
  stops_importance(p.osm_id, p.osm_tags, p.osm_way) as "importance",
  geo_relate_nearest_point(p.osm_id, p.osm_tags, p.osm_way, 15, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)') as "geo", 
  stops_dir(osm_id, osm_tags, osm_way) as "direction"
from
  osm_point p
where
  p.osm_way &amp;&amp; !bbox! and
  (p.osm_tags @> 'highway=>bus_stop' or
   p.osm_tags @> 'railway=>tram_stop' or
   p.osm_tags @> 'railway=>station' or
   p.osm_tags @> 'railway=>halt' or
   p.osm_tags @> 'amenity=>bus_station' or
   p.osm_tags @> 'amenity=>ferry_terminal' or
   p.osm_tags @> 'aeroway=>aerodrome' or
   p.osm_tags @> 'aerialway=>station')
) as stops_p
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <Layer class="stops_n" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geo</Parameter>
      <Parameter name="table">
(select
  cast(round((geo_relate_calc_angles(p.osm_id, p.osm_tags, p.osm_way, 50, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)'))[3]/(2*pi())*72)+54 as int)%72 as "angle", 
  stops_type(p.osm_id, p.osm_tags, p.osm_way) as "type",
  stops_importance(p.osm_id, p.osm_tags, p.osm_way) as "importance",
  geo_relate_nearest_point(p.osm_id, p.osm_tags, p.osm_way, 15, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)') as "geo", 
  stops_dir(osm_id, osm_tags, osm_way) as "direction"
from
  osm_point p
where
  p.osm_way &amp;&amp; !bbox! and
  (p.osm_tags @> 'highway=>bus_stop' or
   p.osm_tags @> 'railway=>tram_stop' or
   p.osm_tags @> 'railway=>station' or
   p.osm_tags @> 'railway=>halt' or
   p.osm_tags @> 'amenity=>bus_station' or
   p.osm_tags @> 'amenity=>ferry_terminal' or
   p.osm_tags @> 'aeroway=>aerodrome' or
   p.osm_tags @> 'aerialway=>station')
) as stops_n
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <!-- EXTRACT -->
   <Layer class="stations_top_extract" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">top</Parameter>
      <Parameter name="table">
(select
  "name", "importance",
  GeometryFromText('POINT(' || x(centroid(poly)) || ' ' || ymax(poly) || ')', 900913) as top,
  poly as bbox
from
 (select
   osm_tags->'name' as "name",
   importance_text(max(importance_order(stops_importance(osm_id, osm_tags, osm_way)))) as "importance",
   envelope(ST_Collect(osm_way)) as "poly"
  from osm_poipoly
  where
    osm_way &amp;&amp; !bbox! and
    (osm_tags @> 'railway=>station' or
     osm_tags @> 'amenity=>bus_station' or
     osm_tags @> 'amenity=>ferry_terminal' or
     osm_tags @> 'aeroway=>aerodrome')
  group by
    osm_tags->'name',
    stop_merge(osm_id, osm_tags, osm_way, 'name')
) as stations) as s
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <!-- LOW ZOOM -->
   <Layer class="stations_top" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">top</Parameter>
      <Parameter name="table">
(select
  "name", "importance",
  GeometryFromText('POINT(' || x(centroid(poly)) || ' ' || ymax(poly) || ')', 900913) as top,
  poly as bbox
from
 (select
   osm_tags->'name' as "name",
   importance_text(max(importance_order(stops_importance(osm_id, osm_tags, osm_way)))) as "importance",
   envelope(ST_Collect((CASE
     WHEN osm_type @> 'form=>point' THEN geo_relate_nearest_point(osm_id, osm_tags, osm_way, 15, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)')
     ELSE osm_way END))) as "poly"
  from osm_poipoly
  where
    osm_way &amp;&amp; !bbox! and
    (osm_tags @> 'highway=>bus_stop' or
     osm_tags @> 'railway=>tram_stop' or
     osm_tags @> 'railway=>station' or
     osm_tags @> 'railway=>halt' or
     osm_tags @> 'amenity=>bus_station' or
     osm_tags @> 'amenity=>ferry_terminal' or
     osm_tags @> 'aeroway=>aerodrome' or
     osm_tags @> 'aerialway=>station')
  group by
    osm_tags->'name',
    stop_merge(osm_id, osm_tags, osm_way, 'name')
) as stations) as s
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="stop_routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geo</Parameter>
      <Parameter name="table">
(select
  p.osm_id as "osm_id",
  geo_relate_nearest_point(p.osm_id, (array_agg(p.osm_tags))[1], p.osm_way, 15, E'(CASE WHEN $2 @> ''highway=>bus_stop'' THEN osm_tags ? ''highway'' WHEN $2 ? ''railway'' THEN osm_tags ? ''railway'' ELSE true END)') as "geo", 
  p.osm_way as "osm_way",
  osm_rel.osm_tags->'route' as "route",
  route_refs(array_agg(osm_rel.osm_tags->'ref'), Array[]::text[]) as "ref",
  array_pos(
    (select
      array_unique(array_agg(osm_rel1.osm_tags->'route'))
    from osm_rel osm_rel1
    where
      osm_rel1.member_ids @> Array[p.osm_id] and 
      osm_rel1.osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'tram', 'bus', 'trolley', 'minibus', 'ferry', 'light_rail', 'trolleybus')
    group by
      p.osm_id),
   osm_rel.osm_tags->'route') as "row"
from osm_point p
  join osm_rel on osm_rel.member_ids @> Array[p.osm_id]
where
  p.osm_way &amp;&amp; !bbox! and
  osm_rel.osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'tram', 'bus', 'trolley', 'minibus', 'ferry', 'light_rail', 'trolleybus')
group by
  p.osm_id,
  p.osm_way,
  osm_rel.osm_tags->'route'
  ) as stop_routes
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>

   <Layer class="pt_line" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
      (select 
        osm_id, osm_tags->'name' as "name", osm_tags->'ref' as "ref",
        (CASE
	  WHEN osm_tags->'railway' in ('platform') THEN 'railway_platform'
	  END) as type,
	char_length(osm_tags->'ref') as ref_length,
	osm_way as "geom"
      from osm_line
      where
        osm_tags @> 'railway=>platform'
      ) as t
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="routestext" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type(osm_tags) "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'tram', 'trolley', 'trolleybus', 'bus', 'minibus', 'tram', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    route_type(osm_tags),
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" desc) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
   <Layer class="routestext_extract" name="routes" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">%DB_NAME%</Parameter>
      <Parameter name="host">%DB_HOST%</Parameter>
      <Parameter name="user">%DB_USER%</Parameter>
      <Parameter name="password">%DB_PASS%</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="geometry_field">geom</Parameter>
      <Parameter name="table">
(select
  route, ref, dir, tunnel, importance,
  ST_LineMerge(ST_Collect(geom)) as "geom" from
  (select
    member_id,
    member_way as "geom",
    route_type(osm_tags) "route",
    route_refs(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "ref",
    route_dir(to_textarray(osm_tags->'ref'), to_textarray(member_role)) as "dir",
    member_tags->'tunnel' as "tunnel",
    route_importance(osm_tags) as "importance"
  from
    osm_rel_members
  where
    osm_tags @> 'type=>route' and
    osm_tags->'route' in ('train', 'rail', 'railway', 'subway', 'ferry', 'light_rail') and
    osm_way &amp;&amp; !bbox! and
    ST_IsValid(osm_way)
  group by
    route_type(osm_tags),
    member_id,
    member_way,
    member_tags->'tunnel',
    route_importance(osm_tags)
  ) routes
group by
  route, ref, dir, tunnel, importance
order by
  "importance" desc) routes1
      </Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
    </Datasource>
   </Layer>
</Map>
