Classify_hmatch is a simple function to match objects in the database to a
specified ruleset and add additional entries to the osm_tags. Example:

 select
   osm_id, osm_way,
   classify_hmatch(osm_id, osm_tags, osm_way, Array['foobar']) as osm_tags
 from
   osm_line;
 
"foobar" is the specified ruleset. You can tell classify_hmatch to use several
rulesets, they are applied one-by-one.

First you have to define your ruleset:
  insert into classify_hmatch values ( 'foobar',
    'barrier=>wall',
    null,
    '#foobar=>1'
  );

  insert into classify_hmatch values ( 'foobar',
    '',
    'barrier',
    '#foobar=>2',
    -1
  );

  insert into classify_hmatch values ( 'foobar',
    'source=>Bing',
    'highway',
    '#foobar=>3, #name=>"[ref] - [name];[name]"',
    -1
  );

Each of the inserts insert a rule to the 'foobar'-ruleset. The first insert
matches all objects with a key/value-pair "barrier=>wall". The second inserts
all objects with a key "barrier", but priority -1 (so the first rule has
priority). The third insert inserts a rule for all highways which have been
drawn from Bing imagery.

The hstore elements of the result column will be added to the return value of
the function. The basic return value is the osm_tags-parameter. The values of
the result column will be parsed by tags_parse. The third insert is an example
for this, here the "#name"-element will be the result of either 
"[ref] - [name]" or "[name]".

Example for a match:
 select classify_hmatch(null, 'barrier=>foobar', null, Array['foobar'])
would return
 "barrier=>foobar, #foobar=>2"

Here's the full definition of the table classify_hmatch:
 create table classify_hmatch (
   type		text		not null,
   match	hstore		not null,
   key_exists	text		null,
   result	hstore		null,
   importance	int		not null default 0
 );

 type       ... The name of the ruleset
 match      ... A match for @> (e.g. 'highway=>service service=>parking_aisle')
 key_exists ... (optional) a key which has to be preset, no matter its value
 result     ... A hstore which should be added to osm_tags
 importance ... A priority of this rule (greater value has priority)
